{"version":3,"sources":["blob.ts"],"names":["Game","realWidth","realHeight","absorb","RESTI","TWOPI","Math","PI","useBlobColors","absorbMode","members","canvas","document","getElementById","Vector","constructor","x","y","subtract","vector","add","multiply","val","dot","v","vectorMultiply","normalize","l","length","nX","nY","reverseX","reverseY","reverse","sqrt","distance","direction","abs","Blob","id","radius","floor","random","color","toString","pos","ctx","getContext","alpha","bump","n","move","collisionCheck","i","roughCollisionCheck","collide","resolveCollision","getColor","MAX","red","green","b1","b2","delta","r","dist2","mtd","max","splice","indexOf","d","im1","im2","vn","impulse","pow","drawStuff","clearRect","width","height","member","beginPath","fillStyle","moveTo","arc","fill","window","requestAnimationFrame","bind","resizeCanvas","innerWidth","innerHeight","scaleCanvas","backingScale","devicePixelRatio","scaleFactor","oldWidth","oldHeight","scale","style","generateId","addRandomBlob","blob","round","insertBlob","push","removeBlob","init","addEventListener","registerEventListeners","event","offsetX","offsetY","woah","querySelector","console","log","genTen","genOneHundred","boldTitle","forEach"],"mappings":"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","file":"blob.js","sourcesContent":["module Game {\n  var realWidth: number;\n  var realHeight: number;\n\n  var absorb: number = 0.1;\n  var RESTI: number = 0.4;\n  var TWOPI: number = Math.PI * 2;\n\n  var useBlobColors: boolean = false;\n  var absorbMode: boolean = false;\n\n  var members: Blob[] = [];\n  var canvas = <HTMLCanvasElement>document.getElementById(\"canvas\");\n\n  class Vector {\n    x: number;\n    y: number;\n\n    constructor(x: number, y: number) {\n      this.x = x;\n      this.y = y;\n    }\n\n    subtract(vector: Vector) {\n      return new Vector(this.x - vector.x, this.y - vector.y);\n    }\n    add(vector: Vector) {\n      return new Vector(this.x + vector.x, this.y + vector.y);\n    }\n    multiply(val: number) {\n      return new Vector(this.x * val, this.y * val);\n    }\n    dot(v: Vector) {\n      return this.x * v.x + this.y * v.y;\n    }\n    vectorMultiply(v: Vector) {\n      return new Vector(this.x * v.x, this.y * v.y);\n    }\n    normalize() {\n      var l = this.length();\n      var nX, nY;\n      if (l !== 0) {\n        nX = this.x / l;\n        nY = this.y / l;\n      } else {\n        nX = 0;\n        nY = 0;\n      }\n\n      return new Vector(nX, nY);\n    }\n\n    reverseX() {\n      this.x *= -1;\n    }\n    reverseY() {\n      this.y *= -1;\n    }\n    reverse() {\n      this.reverseX();\n      this.reverseY();\n    }\n    length() {\n      return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n    distance(v: Vector) {\n      return Math.sqrt(\n        (v.x - this.x) * (v.x - this.x) + (v.y - this.y) * (v.y - this.y)\n      );\n    }\n    direction() {\n      var x = this.x / Math.abs(this.x);\n      var y = this.y / Math.abs(this.y);\n      return new Vector(x, y);\n    }\n  }\n\n  class Blob {\n    id: string;\n    radius: number;\n    color: string;\n    pos: Vector;\n    v: Vector;\n    canvas: HTMLCanvasElement;\n    ctx: CanvasRenderingContext2D;\n\n    constructor(x: number, y: number, id: string, canvas: HTMLCanvasElement) {\n      this.id = id;\n      this.radius = Math.floor(Math.random() * 10) + 1;\n      this.color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n      this.pos = new Vector(x, y);\n      this.v = new Vector(0, 0);\n      this.canvas = canvas;\n      this.ctx = <CanvasRenderingContext2D>(\n        canvas.getContext(\"2d\", { alpha: false })\n      );\n    }\n\n    bump(n: number) {\n      this.v.y += Math.random() >= 0.5 ? 1 : -1 * n;\n      this.v.x += Math.random() >= 0.5 ? 1 : -1 * n;\n    }\n    move() {\n      this.pos.x += this.v.x;\n      this.pos.y += this.v.y;\n\n      // Check for collision with walls\n      if (this.pos.x - this.radius < 0) {\n        this.pos.x = this.radius; // Place ball against edge\n        this.v.x = -(this.v.x * RESTI); // Reverse direction and account for friction\n      } else if (this.pos.x + this.radius > realWidth) {\n        // Right Wall\n        this.pos.x = realWidth - this.radius; // Place ball against edge\n        this.v.x = -(this.v.x * RESTI); // Reverse direction and account for friction\n      }\n\n      if (this.pos.y - this.radius < 0) {\n        // Top Wall\n        this.pos.y = this.radius; // Place ball against edge\n        this.v.y = -(this.v.y * RESTI); // Reverse direction and account for friction\n      } else if (this.pos.y + this.radius > realHeight) {\n        // Bottom Wall\n        this.pos.y = realHeight - this.radius; // Place ball against edge\n        this.v.y = -(this.v.y * RESTI); // Reverse direction and account for friction\n      }\n    }\n    collisionCheck() {\n      for (var i = 0; i < members.length; i++) {\n        if (members[i].id !== this.id) {\n          if (roughCollisionCheck(this, members[i])) {\n            if (collide(this, members[i])) {\n              resolveCollision(this, members[i]);\n            }\n          }\n        }\n      }\n    }\n\n    getColor(): string {\n      let color = this.color;\n      if (!useBlobColors) {\n        var MAX = 3;\n        var red = Math.floor((255 * Math.abs(this.v.y)) / MAX);\n        //console.log(red);\n        var green = 255 - red;\n        color = `rgb(${red}, ${green},0)`;\n      }\n      return color;\n    }\n  }\n\n  function resolveCollision(b1: Blob, b2: Blob) {\n    // get the mtd\n    var delta = b1.pos.subtract(b2.pos);\n    var r = b1.radius + b2.radius;\n    var dist2 = delta.dot(delta);\n    var mtd;\n\n    if (dist2 > r * r) {\n      return; // they aren't colliding\n    }\n\n    if (\n      absorbMode &&\n      b1.radius > b2.radius &&\n      2 * (b1.radius + absorb) < realHeight &&\n      2 * (b1.radius + absorb) < realWidth\n    ) {\n      b1.radius += absorb / 3;\n      b2.radius = Math.max(0, b2.radius - absorb);\n      //console.log(b1.size + ':' + b2.size);\n      if (b2.radius === 0) {\n        members.splice(members.indexOf(b2), 1);\n      }\n    }\n\n    var d = delta.length();\n    //console.log(d);\n    if (d !== 0.0) {\n      // minimum translation distance to push balls apart after intersecting\n      mtd = delta.multiply((b1.radius + b2.radius - d) / d);\n    } else {\n      // Special case. Balls are exactly on top of eachother.\n      // Don't want to divide by zero.\n      d = b1.radius + b2.radius - 1.0;\n      delta = new Vector(b1.radius + b2.radius, 0.0);\n      mtd = delta.multiply((b1.radius + b2.radius - d) / d);\n    }\n    // resolve intersection\n    var im1 = 1 / b1.radius; // inverse mass quantities\n    var im2 = 1 / b2.radius;\n    //console.log(mtd.length());\n    // push-pull them apart\n\n    b1.pos = b1.pos.add(mtd.multiply(im1 / (im1 + im2)));\n    b2.pos = b2.pos.subtract(mtd.multiply(im2 / (im1 + im2)));\n\n    // impact speed\n    var v = b1.v.subtract(b2.v);\n    mtd = mtd.normalize();\n    var vn = v.dot(mtd);\n    // sphere intersecting but moving away from each other already\n    if (vn > 0) {\n      return;\n    }\n\n    // collision impulse\n    var i = -((1.0 + RESTI) * vn) / (im1 + im2);\n    var impulse = mtd.multiply(i);\n    // change in momentum\n    //console.log(impulse.length());\n    b1.v = b1.v.add(impulse.multiply(im1));\n    b2.v = b2.v.subtract(impulse.multiply(im2));\n  }\n\n  function roughCollisionCheck(b1: Blob, b2: Blob) {\n    return (\n      b1.pos.x + b1.radius + b2.radius > b2.pos.x &&\n      b1.pos.x < b2.pos.x + b1.radius + b2.radius &&\n      b1.pos.y + b1.radius + b2.radius > b2.pos.y &&\n      b1.pos.y < b2.pos.y + b1.radius + b2.radius\n    );\n  }\n\n  function collide(b1: Blob, b2: Blob) {\n    let distance = Math.sqrt(\n      Math.pow(b2.pos.x - b1.pos.x, 2) + Math.pow(b2.pos.y - b1.pos.y, 2)\n    );\n    return distance < b1.radius + b2.radius;\n  }\n\n  function drawStuff(ctx: CanvasRenderingContext2D) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    for (const member of members) {\n      member.move();\n      member.collisionCheck();\n    }\n    for (const member of members) {\n      ctx.beginPath();\n      ctx.fillStyle = member.getColor();\n      ctx.moveTo(member.pos.x, member.pos.y);\n      ctx.arc(member.pos.x, member.pos.y, member.radius, 0, TWOPI);\n      ctx.fill();\n    }\n\n    window.requestAnimationFrame(drawStuff.bind(null, ctx));\n  }\n\n  function resizeCanvas() {\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight * 0.8;\n\n    scaleCanvas();\n    var ctx: CanvasRenderingContext2D = <CanvasRenderingContext2D>(\n      canvas.getContext(\"2d\", { alpha: false })\n    );\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    drawStuff(ctx);\n  }\n\n  var backingScale = function() {\n    if (\"devicePixelRatio\" in window) {\n      if (window.devicePixelRatio > 1) {\n        return window.devicePixelRatio;\n      }\n    }\n    return 1;\n  };\n\n  var scaleCanvas = function() {\n    var scaleFactor = backingScale();\n    realWidth = canvas.width;\n    realHeight = canvas.height;\n    if (scaleFactor > 1) {\n      var oldWidth: number = canvas.width;\n      var oldHeight: number = canvas.height;\n      canvas.width = canvas.width * scaleFactor;\n      canvas.height = canvas.height * scaleFactor;\n      // update the context for the new canvas scale\n      var ctx: CanvasRenderingContext2D = <CanvasRenderingContext2D>(\n        canvas.getContext(\"2d\", { alpha: false })\n      );\n      ctx.scale(scaleFactor, scaleFactor);\n      canvas.style.width = realWidth + \"px\";\n      canvas.style.height = realHeight + \"px\";\n    }\n  };\n\n  function generateId(): string {\n    return \"\" + Math.floor(Math.random() * 1000000000);\n  }\n\n  function addRandomBlob(bump = true) {\n    let blob: Blob = new Blob(\n      Math.random() * realWidth,\n      Math.random() * realHeight,\n      generateId(),\n      canvas\n    );\n    if (bump) {\n      blob.bump(Math.round(Math.random() * 3));\n    }\n    insertBlob(blob);\n  }\n\n  function insertBlob(blob: Blob) {\n    members.push(blob);\n  }\n\n  function removeBlob(blob: Blob) {\n    members.splice(members.indexOf(blob), 1);\n  }\n\n  export function init() {\n    realWidth = canvas.width;\n    realHeight = canvas.height;\n\n    window.addEventListener(\"resize\", resizeCanvas, false);\n    addRandomBlob(false);\n    resizeCanvas();\n    registerEventListeners();\n  }\n\n  function registerEventListeners() {\n    const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n    canvas.addEventListener(\"mouseup\", event => {\n      let blob: Blob = new Blob(\n        event.offsetX,\n        event.offsetY,\n        generateId(),\n        canvas\n      );\n      insertBlob(blob);\n    });\n\n    const woah = document.querySelector(\".title .whoa\") as HTMLSpanElement;\n    woah.addEventListener(\"mouseup\", function() {\n      console.log(\"toggle blob colors\");\n      useBlobColors = !useBlobColors;\n    });\n\n    const genTen = document.getElementById(\"gen10\") as HTMLSpanElement;\n    genTen.addEventListener(\"click\", function() {\n      for (let i = 0; i < 10; i++) {\n        addRandomBlob();\n      }\n    });\n\n    const genOneHundred = document.getElementById(\"gen100\") as HTMLSpanElement;\n    genOneHundred.addEventListener(\"click\", function() {\n      for (let i = 0; i < 100; i++) {\n        addRandomBlob();\n      }\n    });\n\n    const boldTitle = document.getElementById(\n      \"bigpartytitle\"\n    ) as HTMLSpanElement;\n    boldTitle.addEventListener(\"click\", function() {\n      members.forEach(member => member.bump(Math.round(Math.random() * 3)));\n    });\n  }\n}\n"]}