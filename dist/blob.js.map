{"version":3,"sources":["blob.ts"],"names":["Game","realWidth","realHeight","fps","absorb","RESTI","TWOPI","Math","PI","useBlobColors","absorbMode","members","canvas","document","getElementById","Vector","constructor","x","y","subtract","vector","add","multiply","val","dot","v","vectorMultiply","normalize","l","length","nX","nY","reverseX","reverseY","reverse","sqrt","distance","direction","abs","Blob","id","bump","n","random","move","pos","size","collisionCheck","i","roughCollisionCheck","collide","resolveCollision","draw","ctx","beginPath","arc","color","MAX","red","floor","green","fillStyle","closePath","fill","toString","getContext","b1","b2","delta","r","dist2","mtd","max","splice","indexOf","d","im1","im2","vn","impulse","pow","drawStuff","clearRect","width","height","window","requestAnimationFrame","resizeCanvas","innerWidth","innerHeight","scaleCanvas","backingScale","devicePixelRatio","scaleFactor","oldWidth","oldHeight","scale","style","generateId","addRandomBlob","blob","round","insertBlob","push","removeBlob","init","addEventListener","registerEventListeners","$","on","event","offsetX","offsetY","console","log","forEach","member"],"mappings":"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","file":"blob.js","sourcesContent":["/// <reference path=\"jquery.d.ts\" />\nmodule Game {\n  var realWidth: number;\n  var realHeight: number;\n  let fps: number;\n\n  var absorb: number = 0.1;\n  var RESTI: number = 0.4;\n  var TWOPI: number = Math.PI * 2;\n\n  var useBlobColors: boolean = false;\n  var absorbMode: boolean = false;\n\n  var members = [];\n  var canvas = <HTMLCanvasElement>document.getElementById(\"canvas\");\n\n  class Vector {\n    x: number;\n    y: number;\n\n    constructor(x: number, y: number) {\n      this.x = x;\n      this.y = y;\n    }\n    subtract = function(vector: Vector) {\n      return new Vector(this.x - vector.x, this.y - vector.y);\n    };\n    add = function(vector: Vector) {\n      return new Vector(this.x + vector.x, this.y + vector.y);\n    };\n    multiply = function(val: number) {\n      return new Vector(this.x * val, this.y * val);\n    };\n    dot = function(v: Vector) {\n      return this.x * v.x + this.y * v.y;\n    };\n    vectorMultiply = function(v: Vector) {\n      return new Vector(this.x * v.x, this.y * v.y);\n    };\n    normalize = function() {\n      var l = this.length();\n      var nX, nY;\n      if (l !== 0) {\n        nX = this.x / l;\n        nY = this.y / l;\n      } else {\n        nX = 0;\n        nY = 0;\n      }\n\n      return new Vector(nX, nY);\n    };\n\n    reverseX = function() {\n      this.x *= -1;\n    };\n    reverseY = function() {\n      this.y *= -1;\n    };\n    reverse = function() {\n      this.reverseX();\n      this.reverseY();\n    };\n    length = function() {\n      return Math.sqrt(this.x * this.x + this.y * this.y);\n    };\n    distance = function(v: Vector) {\n      return Math.sqrt(\n        (v.x - this.x) * (v.x - this.x) + (v.y - this.y) * (v.y - this.y)\n      );\n    };\n    direction = function() {\n      var x = this.x / Math.abs(x);\n      var y = this.y / Math.abs(y);\n      return new Vector(x, y);\n    };\n  }\n\n  class Blob {\n    id: string;\n    size: number;\n    color: string;\n    pos: Vector;\n    v: Vector;\n    canvas: HTMLCanvasElement;\n    ctx: CanvasRenderingContext2D;\n\n    constructor(x: number, y: number, id: string, canvas: HTMLCanvasElement) {\n      this.id = id;\n      this.size = Math.floor(Math.random() * 10) + 6;\n      this.color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n      this.pos = new Vector(x, y);\n      this.v = new Vector(0, 0);\n      this.canvas = canvas;\n      this.ctx = <CanvasRenderingContext2D>canvas.getContext(\"2d\");\n    }\n\n    bump = function(n: number) {\n      this.v.y += Math.random() >= 0.5 ? 1 : -1 * n;\n      this.v.x += Math.random() >= 0.5 ? 1 : -1 * n;\n    };\n    move = function() {\n      this.pos.x += this.v.x;\n      this.pos.y += this.v.y;\n\n      // Check for collision with walls\n      if (this.pos.x - this.size < 0) {\n        this.pos.x = this.size; // Place ball against edge\n        this.v.x = -(this.v.x * RESTI); // Reverse direction and account for friction\n      } else if (this.pos.x + this.size > realWidth) {\n        // Right Wall\n        this.pos.x = realWidth - this.size; // Place ball against edge\n        this.v.x = -(this.v.x * RESTI); // Reverse direction and account for friction\n      }\n\n      if (this.pos.y - this.size < 0) {\n        // Top Wall\n        this.pos.y = this.size; // Place ball against edge\n        this.v.y = -(this.v.y * RESTI); // Reverse direction and account for friction\n      } else if (this.pos.y + this.size > realHeight) {\n        // Bottom Wall\n        this.pos.y = realHeight - this.size; // Place ball against edge\n        this.v.y = -(this.v.y * RESTI); // Reverse direction and account for friction\n      }\n    };\n    collisionCheck = function() {\n      for (var i = 0; i < members.length; i++) {\n        if (members[i].id !== this.id) {\n          if (roughCollisionCheck(this, members[i])) {\n            if (collide(this, members[i])) {\n              resolveCollision(this, members[i]);\n            }\n          }\n        }\n      }\n    };\n    draw = function(ctx) {\n      ctx.beginPath();\n      ctx.arc(this.pos.x, this.pos.y, this.size, 0, TWOPI, true);\n      //ctx.fillStyle = this.color;\n      var color = this.color;\n      if (!useBlobColors) {\n        var MAX = 3;\n        var red = Math.floor((255 * Math.abs(this.v.y)) / MAX);\n        //console.log(red);\n        var green = 255 - red;\n        color = \"rgb(\" + red + \",\" + green + \",0)\";\n      }\n      ctx.fillStyle = color;\n      ctx.closePath();\n      ctx.fill();\n    };\n  }\n\n  function resolveCollision(b1: Blob, b2: Blob) {\n    // get the mtd\n    var delta = b1.pos.subtract(b2.pos);\n    var r = b1.size + b2.size;\n    var dist2 = delta.dot(delta);\n    var mtd;\n\n    if (dist2 > r * r) {\n      return; // they aren't colliding\n    }\n\n    if (\n      absorbMode &&\n      b1.size > b2.size &&\n      2 * (b1.size + absorb) < realHeight &&\n      2 * (b1.size + absorb) < realWidth\n    ) {\n      b1.size += absorb / 3;\n      b2.size = Math.max(0, b2.size - absorb);\n      //console.log(b1.size + ':' + b2.size);\n      if (b2.size === 0) {\n        members.splice(members.indexOf(b2), 1);\n      }\n    }\n\n    var d = delta.length();\n    //console.log(d);\n    if (d !== 0.0) {\n      // minimum translation distance to push balls apart after intersecting\n      mtd = delta.multiply((b1.size + b2.size - d) / d);\n    } else {\n      // Special case. Balls are exactly on top of eachother.\n      // Don't want to divide by zero.\n      d = b1.size + b2.size - 1.0;\n      delta = new Vector(b1.size + b2.size, 0.0);\n      mtd = delta.multiply((b1.size + b2.size - d) / d);\n    }\n    // resolve intersection\n    var im1 = 1 / b1.size; // inverse mass quantities\n    var im2 = 1 / b2.size;\n    //console.log(mtd.length());\n    // push-pull them apart\n\n    b1.pos = b1.pos.add(mtd.multiply(im1 / (im1 + im2)));\n    b2.pos = b2.pos.subtract(mtd.multiply(im2 / (im1 + im2)));\n\n    // impact speed\n    var v = b1.v.subtract(b2.v);\n    mtd = mtd.normalize();\n    var vn = v.dot(mtd);\n    // sphere intersecting but moving away from each other already\n    if (vn > 0) {\n      return;\n    }\n\n    // collision impulse\n    var i = -((1.0 + RESTI) * vn) / (im1 + im2);\n    var impulse = mtd.multiply(i);\n    // change in momentum\n    //console.log(impulse.length());\n    b1.v = b1.v.add(impulse.multiply(im1));\n    b2.v = b2.v.subtract(impulse.multiply(im2));\n  }\n\n  function roughCollisionCheck(b1: Blob, b2: Blob) {\n    return (\n      b1.pos.x + b1.size + b2.size > b2.pos.x &&\n      b1.pos.x < b2.pos.x + b1.size + b2.size &&\n      b1.pos.y + b1.size + b2.size > b2.pos.y &&\n      b1.pos.y < b2.pos.y + b1.size + b2.size\n    );\n  }\n\n  function collide(b1, b2) {\n    let distance = Math.sqrt(\n      Math.pow(b2.pos.x - b1.pos.x, 2) + Math.pow(b2.pos.y - b1.pos.y, 2)\n    );\n    return distance < b1.size + b2.size;\n  }\n\n  function drawStuff() {\n    var ctx = <CanvasRenderingContext2D>canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    for (var i = 0; i < members.length; i++) {\n      members[i].move(ctx);\n    }\n    for (var i = 0; i < members.length; i++) {\n      members[i].collisionCheck(ctx);\n      members[i].draw(ctx);\n    }\n\n    window.requestAnimationFrame(drawStuff);\n  }\n\n  function resizeCanvas() {\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight * 0.8;\n\n    scaleCanvas();\n    drawStuff();\n  }\n\n  var backingScale = function() {\n    if (\"devicePixelRatio\" in window) {\n      if (window.devicePixelRatio > 1) {\n        return window.devicePixelRatio;\n      }\n    }\n    return 1;\n  };\n\n  var scaleCanvas = function() {\n    var scaleFactor = backingScale();\n    realWidth = canvas.width;\n    realHeight = canvas.height;\n    if (scaleFactor > 1) {\n      var oldWidth: number = canvas.width;\n      var oldHeight: number = canvas.height;\n      canvas.width = canvas.width * scaleFactor;\n      canvas.height = canvas.height * scaleFactor;\n      // update the context for the new canvas scale\n      var ctx: CanvasRenderingContext2D = <CanvasRenderingContext2D>(\n        canvas.getContext(\"2d\")\n      );\n      ctx.scale(scaleFactor, scaleFactor);\n      canvas.style.width = realWidth + \"px\";\n      canvas.style.height = realHeight + \"px\";\n    }\n  };\n\n  function generateId(): string {\n    return \"\" + Math.floor(Math.random() * 1000000000);\n  }\n\n  function addRandomBlob() {\n    let blob: Blob = new Blob(\n      Math.random() * realWidth,\n      Math.random() * realHeight,\n      generateId(),\n      canvas\n    );\n    blob.bump(Math.round(Math.random() * 3));\n    insertBlob(blob);\n  }\n\n  function insertBlob(blob: Blob) {\n    members.push(blob);\n  }\n\n  function removeBlob(blob: Blob) {\n    members.splice(members.indexOf(blob), 1);\n  }\n\n  export function init() {\n    realWidth = canvas.width;\n    realHeight = canvas.height;\n\n    window.addEventListener(\"resize\", resizeCanvas, false);\n    addRandomBlob();\n    resizeCanvas();\n    registerEventListeners();\n  }\n\n  function registerEventListeners() {\n    $(\"#canvas\").on(\"mouseup\", function(event) {\n      let blob: Blob = new Blob(\n        event.offsetX,\n        event.offsetY,\n        generateId(),\n        canvas\n      );\n      insertBlob(blob);\n    });\n\n    $(\".title .whoa\").on(\"mouseup\", function() {\n      console.log(\"toggle blob colors\");\n      useBlobColors = !useBlobColors;\n    });\n\n    $(\"#gen10\").on(\"click\", function() {\n      for (let i = 0; i < 10; i++) {\n        addRandomBlob();\n      }\n    });\n\n    $(\"#gen100\").on(\"click\", function() {\n      for (let i = 0; i < 100; i++) {\n        addRandomBlob();\n      }\n    });\n\n    $(\".title .bold\").on(\"mouseup\", function() {\n      members.forEach(member => member.bump(Math.round(Math.random() * 3)));\n    });\n  }\n}\n"]}