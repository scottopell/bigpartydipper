{"version":3,"sources":["blob.ts"],"names":["Game","realWidth","realHeight","absorb","RESTI","TWOPI","Math","PI","useBlobColors","absorbMode","members","canvas","document","getElementById","Vector","constructor","x","y","subtract","vector","add","multiply","val","dot","v","vectorMultiply","normalize","l","length","nX","nY","reverseX","reverseY","reverse","sqrt","distance","direction","abs","Blob","id","size","floor","random","color","toString","pos","ctx","getContext","bump","n","move","collisionCheck","i","roughCollisionCheck","collide","resolveCollision","draw","beginPath","arc","MAX","red","green","fillStyle","closePath","fill","b1","b2","delta","r","dist2","mtd","max","splice","indexOf","d","im1","im2","vn","impulse","pow","drawStuff","clearRect","width","height","window","requestAnimationFrame","resizeCanvas","innerWidth","innerHeight","scaleCanvas","backingScale","devicePixelRatio","scaleFactor","oldWidth","oldHeight","scale","style","generateId","addRandomBlob","blob","round","insertBlob","push","removeBlob","init","addEventListener","registerEventListeners","event","offsetX","offsetY","woah","querySelector","console","log","genTen","genOneHundred","boldTitle","forEach","member"],"mappings":"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","file":"blob.js","sourcesContent":["module Game {\n  var realWidth: number;\n  var realHeight: number;\n\n  var absorb: number = 0.1;\n  var RESTI: number = 0.4;\n  var TWOPI: number = Math.PI * 2;\n\n  var useBlobColors: boolean = false;\n  var absorbMode: boolean = false;\n\n  var members: Blob[] = [];\n  var canvas = <HTMLCanvasElement>document.getElementById(\"canvas\");\n\n  class Vector {\n    x: number;\n    y: number;\n\n    constructor(x: number, y: number) {\n      this.x = x;\n      this.y = y;\n    }\n\n    subtract(vector: Vector) {\n      return new Vector(this.x - vector.x, this.y - vector.y);\n    }\n    add(vector: Vector) {\n      return new Vector(this.x + vector.x, this.y + vector.y);\n    }\n    multiply(val: number) {\n      return new Vector(this.x * val, this.y * val);\n    }\n    dot(v: Vector) {\n      return this.x * v.x + this.y * v.y;\n    }\n    vectorMultiply(v: Vector) {\n      return new Vector(this.x * v.x, this.y * v.y);\n    }\n    normalize() {\n      var l = this.length();\n      var nX, nY;\n      if (l !== 0) {\n        nX = this.x / l;\n        nY = this.y / l;\n      } else {\n        nX = 0;\n        nY = 0;\n      }\n\n      return new Vector(nX, nY);\n    }\n\n    reverseX() {\n      this.x *= -1;\n    }\n    reverseY() {\n      this.y *= -1;\n    }\n    reverse() {\n      this.reverseX();\n      this.reverseY();\n    }\n    length() {\n      return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n    distance(v: Vector) {\n      return Math.sqrt(\n        (v.x - this.x) * (v.x - this.x) + (v.y - this.y) * (v.y - this.y)\n      );\n    }\n    direction() {\n      var x = this.x / Math.abs(this.x);\n      var y = this.y / Math.abs(this.y);\n      return new Vector(x, y);\n    }\n  }\n\n  class Blob {\n    id: string;\n    size: number;\n    color: string;\n    pos: Vector;\n    v: Vector;\n    canvas: HTMLCanvasElement;\n    ctx: CanvasRenderingContext2D;\n\n    constructor(x: number, y: number, id: string, canvas: HTMLCanvasElement) {\n      this.id = id;\n      this.size = Math.floor(Math.random() * 10) + 6;\n      this.color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n      this.pos = new Vector(x, y);\n      this.v = new Vector(0, 0);\n      this.canvas = canvas;\n      this.ctx = <CanvasRenderingContext2D>canvas.getContext(\"2d\");\n    }\n\n    bump(n: number) {\n      this.v.y += Math.random() >= 0.5 ? 1 : -1 * n;\n      this.v.x += Math.random() >= 0.5 ? 1 : -1 * n;\n    }\n    move() {\n      this.pos.x += this.v.x;\n      this.pos.y += this.v.y;\n\n      // Check for collision with walls\n      if (this.pos.x - this.size < 0) {\n        this.pos.x = this.size; // Place ball against edge\n        this.v.x = -(this.v.x * RESTI); // Reverse direction and account for friction\n      } else if (this.pos.x + this.size > realWidth) {\n        // Right Wall\n        this.pos.x = realWidth - this.size; // Place ball against edge\n        this.v.x = -(this.v.x * RESTI); // Reverse direction and account for friction\n      }\n\n      if (this.pos.y - this.size < 0) {\n        // Top Wall\n        this.pos.y = this.size; // Place ball against edge\n        this.v.y = -(this.v.y * RESTI); // Reverse direction and account for friction\n      } else if (this.pos.y + this.size > realHeight) {\n        // Bottom Wall\n        this.pos.y = realHeight - this.size; // Place ball against edge\n        this.v.y = -(this.v.y * RESTI); // Reverse direction and account for friction\n      }\n    }\n    collisionCheck() {\n      for (var i = 0; i < members.length; i++) {\n        if (members[i].id !== this.id) {\n          if (roughCollisionCheck(this, members[i])) {\n            if (collide(this, members[i])) {\n              resolveCollision(this, members[i]);\n            }\n          }\n        }\n      }\n    }\n    draw(ctx: CanvasRenderingContext2D) {\n      ctx.beginPath();\n      ctx.arc(this.pos.x, this.pos.y, this.size, 0, TWOPI, true);\n      //ctx.fillStyle = this.color;\n      var color = this.color;\n      if (!useBlobColors) {\n        var MAX = 3;\n        var red = Math.floor((255 * Math.abs(this.v.y)) / MAX);\n        //console.log(red);\n        var green = 255 - red;\n        color = \"rgb(\" + red + \",\" + green + \",0)\";\n      }\n      ctx.fillStyle = color;\n      ctx.closePath();\n      ctx.fill();\n    }\n  }\n\n  function resolveCollision(b1: Blob, b2: Blob) {\n    // get the mtd\n    var delta = b1.pos.subtract(b2.pos);\n    var r = b1.size + b2.size;\n    var dist2 = delta.dot(delta);\n    var mtd;\n\n    if (dist2 > r * r) {\n      return; // they aren't colliding\n    }\n\n    if (\n      absorbMode &&\n      b1.size > b2.size &&\n      2 * (b1.size + absorb) < realHeight &&\n      2 * (b1.size + absorb) < realWidth\n    ) {\n      b1.size += absorb / 3;\n      b2.size = Math.max(0, b2.size - absorb);\n      //console.log(b1.size + ':' + b2.size);\n      if (b2.size === 0) {\n        members.splice(members.indexOf(b2), 1);\n      }\n    }\n\n    var d = delta.length();\n    //console.log(d);\n    if (d !== 0.0) {\n      // minimum translation distance to push balls apart after intersecting\n      mtd = delta.multiply((b1.size + b2.size - d) / d);\n    } else {\n      // Special case. Balls are exactly on top of eachother.\n      // Don't want to divide by zero.\n      d = b1.size + b2.size - 1.0;\n      delta = new Vector(b1.size + b2.size, 0.0);\n      mtd = delta.multiply((b1.size + b2.size - d) / d);\n    }\n    // resolve intersection\n    var im1 = 1 / b1.size; // inverse mass quantities\n    var im2 = 1 / b2.size;\n    //console.log(mtd.length());\n    // push-pull them apart\n\n    b1.pos = b1.pos.add(mtd.multiply(im1 / (im1 + im2)));\n    b2.pos = b2.pos.subtract(mtd.multiply(im2 / (im1 + im2)));\n\n    // impact speed\n    var v = b1.v.subtract(b2.v);\n    mtd = mtd.normalize();\n    var vn = v.dot(mtd);\n    // sphere intersecting but moving away from each other already\n    if (vn > 0) {\n      return;\n    }\n\n    // collision impulse\n    var i = -((1.0 + RESTI) * vn) / (im1 + im2);\n    var impulse = mtd.multiply(i);\n    // change in momentum\n    //console.log(impulse.length());\n    b1.v = b1.v.add(impulse.multiply(im1));\n    b2.v = b2.v.subtract(impulse.multiply(im2));\n  }\n\n  function roughCollisionCheck(b1: Blob, b2: Blob) {\n    return (\n      b1.pos.x + b1.size + b2.size > b2.pos.x &&\n      b1.pos.x < b2.pos.x + b1.size + b2.size &&\n      b1.pos.y + b1.size + b2.size > b2.pos.y &&\n      b1.pos.y < b2.pos.y + b1.size + b2.size\n    );\n  }\n\n  function collide(b1: Blob, b2: Blob) {\n    let distance = Math.sqrt(\n      Math.pow(b2.pos.x - b1.pos.x, 2) + Math.pow(b2.pos.y - b1.pos.y, 2)\n    );\n    return distance < b1.size + b2.size;\n  }\n\n  function drawStuff() {\n    var ctx = <CanvasRenderingContext2D>canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    for (var i = 0; i < members.length; i++) {\n      members[i].move();\n    }\n    for (var i = 0; i < members.length; i++) {\n      members[i].collisionCheck();\n      members[i].draw(ctx);\n    }\n\n    window.requestAnimationFrame(drawStuff);\n  }\n\n  function resizeCanvas() {\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight * 0.8;\n\n    scaleCanvas();\n    drawStuff();\n  }\n\n  var backingScale = function() {\n    if (\"devicePixelRatio\" in window) {\n      if (window.devicePixelRatio > 1) {\n        return window.devicePixelRatio;\n      }\n    }\n    return 1;\n  };\n\n  var scaleCanvas = function() {\n    var scaleFactor = backingScale();\n    realWidth = canvas.width;\n    realHeight = canvas.height;\n    if (scaleFactor > 1) {\n      var oldWidth: number = canvas.width;\n      var oldHeight: number = canvas.height;\n      canvas.width = canvas.width * scaleFactor;\n      canvas.height = canvas.height * scaleFactor;\n      // update the context for the new canvas scale\n      var ctx: CanvasRenderingContext2D = <CanvasRenderingContext2D>(\n        canvas.getContext(\"2d\")\n      );\n      ctx.scale(scaleFactor, scaleFactor);\n      canvas.style.width = realWidth + \"px\";\n      canvas.style.height = realHeight + \"px\";\n    }\n  };\n\n  function generateId(): string {\n    return \"\" + Math.floor(Math.random() * 1000000000);\n  }\n\n  function addRandomBlob() {\n    let blob: Blob = new Blob(\n      Math.random() * realWidth,\n      Math.random() * realHeight,\n      generateId(),\n      canvas\n    );\n    blob.bump(Math.round(Math.random() * 3));\n    insertBlob(blob);\n  }\n\n  function insertBlob(blob: Blob) {\n    members.push(blob);\n  }\n\n  function removeBlob(blob: Blob) {\n    members.splice(members.indexOf(blob), 1);\n  }\n\n  export function init() {\n    realWidth = canvas.width;\n    realHeight = canvas.height;\n\n    window.addEventListener(\"resize\", resizeCanvas, false);\n    addRandomBlob();\n    resizeCanvas();\n    registerEventListeners();\n  }\n\n  function registerEventListeners() {\n    const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n    canvas.addEventListener(\"mouseup\", event => {\n      let blob: Blob = new Blob(\n        event.offsetX,\n        event.offsetY,\n        generateId(),\n        canvas\n      );\n      insertBlob(blob);\n    });\n\n    const woah = document.querySelector(\".title .whoa\") as HTMLSpanElement;\n    woah.addEventListener(\"mouseup\", function() {\n      console.log(\"toggle blob colors\");\n      useBlobColors = !useBlobColors;\n    });\n\n    const genTen = document.getElementById(\"gen10\") as HTMLSpanElement;\n    genTen.addEventListener(\"click\", function() {\n      for (let i = 0; i < 10; i++) {\n        addRandomBlob();\n      }\n    });\n\n    const genOneHundred = document.getElementById(\"gen100\") as HTMLSpanElement;\n    genOneHundred.addEventListener(\"click\", function() {\n      for (let i = 0; i < 100; i++) {\n        addRandomBlob();\n      }\n    });\n\n    const boldTitle = document.getElementById(\"bigpartytitle\") as HTMLSpanElement;\n    boldTitle.addEventListener(\"click\", function() {\n      members.forEach(member => member.bump(Math.round(Math.random() * 3)));\n    });\n  }\n}\n"]}